name: Terraform Plan
description: "Github Action to Run Terraform Plan"

inputs:
  path:
    description: "Path to the Terraform files directory"
    required: true
  label:
    description: "A friendly name for the plan (if specified, needs to match the label used in the apply action)"
    required: false
  backend_config_file:
    description: "Backend config file for terraform"
    required: false
  backend_config:
    description: List of backend config values to set, one per line
    required: false
    default: ""
  var_file:
    description: "List of tfvars files to use"
    required: false
  variables:
    description: Variable definitions
    required: false
  add_github_comment:
    description: |
      The default is "true", which adds a comment to the PR with the results of the plan.
      Set to "changes-only" to add a comment only when the plan indicates there are changes to apply.
      Set to "false" to disable the comment - the plan will still appear in the workflow log.
    default: "true"
    required: false

outputs:
  changes:
    description: "If the generated plan would update any resources or outputs this is set to `true`, otherwise it's set to `false`."
    value: ${{ steps.plan.outputs.changes }}

runs:
  using: "composite"
  steps:
    - name: Terraform Format
      uses: dflook/terraform-fmt-check@c927c68cc5f817497084d4fb889264faae4275cb
      with:
        path: ${{ inputs.path }}

    - name: Terraform Plan
      uses: dflook/terraform-plan@cf2c225e3088d0cbd3bedc68690c216033e3013a
      id: plan
      with:
        path: ${{ inputs.path }}
        label: ${{ inputs.label }}
        backend_config_file: ${{ inputs.backend_config_file }}
        backend_config: ${{ inputs.backend_config }}
        var_file: ${{ inputs.var_file }}
        variables: ${{ inputs.variables }}
        add_github_comment: ${{ inputs.add_github_comment }}

    - name: Job Summary
      shell: bash
      run: |
        echo "### Terraform plan" >> $GITHUB_STEP_SUMMARY
        echo "Plan: ${{ steps.plan.outputs.to_add }} to add, ${{ steps.plan.outputs.to_change }} to change, ${{ steps.plan.outputs.to_destroy }} to destroy.<br>" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`hcl" >> $GITHUB_STEP_SUMMARY
        while IFS= read -r line
        do
          echo "$line" >> $GITHUB_STEP_SUMMARY
        done < "${{ steps.plan.outputs.text_plan_path }}"
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
